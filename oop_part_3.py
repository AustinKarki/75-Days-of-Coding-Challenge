# -*- coding: utf-8 -*-
"""oop part 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CLl7mhltQSUhDAsu8NECaATGQ03ej3Lp
"""

class Product:
    def __init__(self, product_name, price, stock):
        self.product_name = product_name
        self.price = price
        self.stock = stock

    def is_in_stock(self, quantity):
        return self.stock >= quantity

    def reduce_stock(self, quantity):
        if self.is_in_stock(quantity):
            self.stock -= quantity

class Admin:
    def __init__(self):
        self.product = []
        self.order = []

    def add_product(self, product):
        self.product.append(product)

    def view_products(self):
        for product in self.product:
            print(f"Product Name: {product.product_name}, Price: {product.price}, Stock: {product.stock}")

    def order_history(self):
        for order in self.order:
            print(f"Customer: {order['customer']}")
            for item in order['cart']:
                print(f"  {item['product']} - {item['quantity']} @ {item['price']} each")

class Customer:
    def __init__(self, name, email, admin):
        self.name = name
        self.email = email
        self.admin = admin
        self.cart = []

    def add_to_cart(self, product_name, quantity):
        for i in self.admin.product:
            if i.product_name == product_name:
                if i.is_in_stock(quantity):
                    i.reduce_stock(quantity)
                    self.cart.append({"product": product_name, "quantity": quantity, "price": i.price})
                    print(f"Added {quantity} of {product_name} to the cart.")
                else:
                    print(f"Product {product_name} is out of stock.")
                return
        print(f"Product {product_name} not found.")

    def bill(self):
        total = 0
        print(f"Customer Name: {self.name}, Email: {self.email}")
        for item in self.cart:
            print(f"{item['product']} - {item['quantity']} @ {item['price']} each")
            total += item["price"] * item['quantity']

        print(f"Total bill: {total}")


        self.admin.order.append({"customer": self.name, "cart": self.cart})


admin = Admin()
admin.add_product(Product("Laptop", 1000, 10))
admin.add_product(Product("Mouse", 50, 30))


customer = Customer("John Doe", "john@example.com", admin)
customer.add_to_cart("Laptop", 2)
customer.add_to_cart("Mouse", 5)


customer.bill()
admin.order_history()